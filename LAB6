import numpy as np

def fitness(x):
    return x**2

n_particles = 10
pos = np.random.uniform(-10, 10, n_particles)
vel = np.zeros(n_particles)
pbest = pos.copy()
gbest = pos[np.argmin([fitness(p) for p in pbest])]

for _ in range(20):
    for i in range(n_particles):
        vel[i] = 0.5 * vel[i] + 0.8 * (pbest[i] - pos[i]) + 0.9 * (gbest - pos[i])
        pos[i] += vel[i]
        if fitness(pos[i]) < fitness(pbest[i]):
            pbest[i] = pos[i]
    gbest = pbest[np.argmin([fitness(p) for p in pbest])]

print("Best solution:", gbest)
